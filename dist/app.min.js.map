<<<<<<< HEAD
{"version":3,"sources":["app.js"],"names":["express","require","path","logger","cookieParser","courseRouter","app","set","join","__dirname","indexRouter","use","json","urlencoded","extended","res","next","err","Error","req","locals","message","error","get","status","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,aAAiBC,QAAC,iBAGlBE,OAASF,QAAQ,UAFvBA,QAAU,mBACV,IAAMG,YAAeH,QAAQ,yBAKvBI,aAAeJ,QAAQ,gCAEvBK,IAAMN,UAGZM,IAAIC,IAAI,QAASL,KAAKM,KAAKC,UAAW,SAAU,UANhDH,IAAMI,IAAAA,cAAcT,QASpBK,IAAIK,IAAIR,OAAO,QARfG,IAAMD,IAAAA,QAAYO,QAUlBN,IAAIK,IAAIX,QAAQa,WAAW,CAAEC,UAAU,KACvCR,IAAIK,IAAIP,gBATRE,IAAMA,IAAGN,QAAGA,OAEZE,KAAAM,KAAAC,UAAA,YAEAH,IAAIC,IAAI,IAAAG,aAERJ,IAAIK,IAAIR,WAAME,cAEeS,IAAAA,IAAAA,SAAAA,EAAUC,EAAAC,GAAvC,IAAAC,EAAA,IAAAC,MAAA,aACAZ,EAAIK,OAAIP,IACRE,EAAAW,KAIAX,IAAIK,IAAI,SAAAM,EAAAE,EAARJ,EAAoBV,GAEpBU,EAAAK,OAAAC,QAAAJ,EAAAI,QAUEN,EAAIK,OAAOE,MAA+B,gBAAvBH,EAAIb,IAAIiB,IAAI,OAA2BN,EAAM,GATlEX,EAAIK,OAAIM,EAAAO,QAAA,KACNT,EAAME,OAAM,WAGbQ,OAEDC,QAAApB","file":"app.min.js","sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst logger = require(\"morgan\");\r\nrequire(\"./api/models/db\"); // Ensure your MongoDB connection is established\r\n\r\nconst indexRouter = require(\"./server/routes/index\"); // Index/Home routes\r\nconst courseRouter = require(\"./server/routes/courseRoutes\"); // Course routes\r\n\r\nconst app = express();\r\n\r\n// View engine setup\r\napp.set(\"views\", path.join(__dirname, \"server\", \"views\"));\r\napp.set(\"view engine\", \"jade\");\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n// Set up routes\r\napp.use(\"/\", indexRouter); // Home routes or general routes\r\napp.use(\"/courses\", courseRouter); // All course-related routes, including reviews\r\n\r\n// Catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  const err = new Error(\"Not Found\");\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// Error handler\r\napp.use((err, req, res, next) => {\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  res.status(err.status || 500);\r\n  res.render(\"error\");\r\n});\r\n\r\nmodule.exports = app;\r\n"]}
=======
{"version":3,"sources":["app.js"],"names":["express","require","path","logger","cookieParser","courseRouter","app","indexRouter","__dirname","set","use","json","urlencoded","extended","reviewRouter","join","Error","err","status","req","res","next","message","locals","error","get","render","module"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,KAAAD,QAAA,QACMD,aAAiBC,QAAC,iBAGlBE,OAASF,QAAQ,UAFvBA,QAAU,mBACV,IAAMG,YAAeH,QAAQ,yBAKvBI,aAAeJ,QAAQ,gCAJvBE,aAAiBF,QAAD,gCACtBA,IAAQD,UAERM,IAAMC,IAAAA,QAAWL,KAAGD,KAAQO,UAAA,SAAA,UAQ5BF,IAAIG,IAAI,cAAe,QAPvBH,IAAMD,IAAAA,OAAAA,QAUNC,IAAII,IAAIV,QAAQW,QAChBL,IAAII,IAAIV,QAAQY,WAAW,CAAEC,UAAU,KAVvCP,IAAMQ,IAAAA,gBAYNR,IAAII,IAAIV,QAAO,OAAQE,KAAKa,KAAKP,UAAW,YAG5CF,IAAII,IAAI,IAAKH,aAVbD,IAAIG,IAAI,WAASP,cACjBI,IAAIG,IAAI,WAAAK,cAIRR,IAAII,IAAIV,SAAAA,EAAAA,EAAQY,GAAaC,IAAAA,EAAU,IAAAG,MAAA,aAAvCC,EAAAC,OAAA,IACAZ,EAAAW,KAgBAX,IAAII,IAAI,SAACO,EAAKE,EAAKC,EAAKC,GAXxBf,EAAII,OAAIY,QAAYjB,EAAAA,QAalBe,EAAIG,OAAOC,MAA+B,gBAAvBL,EAAIb,IAAImB,IAAI,OAA2BR,EAAM,GAZlEX,EAAII,OAAIO,EAAAC,QAAYJ,KAEpBM,EAAAM,OAAA,WAEEC,OAAMV,QAAUD","file":"app.min.js","sourcesContent":["// app.js \r\nconst express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst cookieParser = require(\"cookie-parser\");\r\nconst logger = require(\"morgan\");\r\nrequire(\"./api/models/db\"); // Ensure your MongoDB connection is established\r\n\r\nconst indexRouter = require(\"./server/routes/index\"); // Index/Home routes\r\nconst courseRouter = require(\"./server/routes/courseRoutes\"); // Course routes\r\nconst reviewRouter = require(\"./server/routes/reviewRoutes\"); // Review routes\r\n\r\nconst app = express();\r\n\r\n// View engine setup\r\napp.set(\"views\", path.join(__dirname, \"server\", \"views\"));\r\napp.set(\"view engine\", \"jade\");\r\n\r\napp.use(logger(\"dev\"));\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\napp.use(express.static(path.join(__dirname, \"public\")));\r\n\r\n// Set up routes\r\napp.use(\"/\", indexRouter); // Home routes or general routes\r\napp.use(\"/courses\", courseRouter); // All course-related routes\r\napp.use(\"/reviews\", reviewRouter); // All review-related routes\r\n\r\n// Catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  const err = new Error(\"Not Found\");\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// Error handler\r\napp.use((err, req, res, next) => {\r\n  res.locals.message = err.message;\r\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\r\n  res.status(err.status || 500);\r\n  res.render(\"error\");\r\n});\r\n\r\nmodule.exports = app;\r\n"]}
>>>>>>> baea0f805be43cb9f0d18de0157714dbb01214b3
