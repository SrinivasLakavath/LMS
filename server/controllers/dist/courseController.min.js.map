<<<<<<< HEAD
{"version":3,"sources":["courseController.js"],"names":["Course","require","exports","getCourseListView","req","res","courses","regeneratorRuntime","async","_context","prev","next","awrap","find","exec","sent","t0","status","send","stop","getCourseDetailsView","courseId","course","_context2","params","id","findById","abrupt","addReviewView","_req$body","author","rating","reviewText","newReview","_context3","body","timestamp","Date","reviews","push","save","redirect","concat"],"mappings":"aACA,IAAMA,OAASC,QAAQ,2BAEvBC,QAAAC,kBAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAG0BZ,OAAOa,OAAOC,QAHxC,KAAA,EAGUR,EAHVG,EAAAM,KACAb,EAAQC,OAAAA,aAAoB,CAAAG,QAAAA,IAD5BG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAC4BJ,EAAAY,OAAA,KAAAC,KAAA,6BAAAT,EAAAO,IAD5B,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAC4BjB,QAAAkB,qBAAA,SAAAhB,EAAAC,GAAA,IAAAgB,EAAAC,EAAA,OAAAf,mBAAAC,MAAA,SAAAe,GAAA,OAAA,OAAAA,EAAAb,KAAAa,EAAAZ,MAAA,KAAA,EAAA,OAAAU,EAAAjB,EAAAoB,OAAAC,GAAAF,EAAAb,KAAA,EAAAa,EAAAZ,KAAA,EAAAJ,mBAAAK,MAAAZ,OAAA0B,SAAAL,GAAAP,QAAA,KAAA,EAAA,GAAAQ,EAAAC,EAAAR,KAAA,CAAAQ,EAAAZ,KAAA,EAAA,MAAA,OAAAY,EAAAI,OAAA,SAEoBtB,EAAAY,OAAA,KAAAC,KAAA,qBAFpB,KAAA,EAGGZ,EAAAA,OAAAA,gBAAAA,CAAAA,OAAAA,IAHHiB,EAAAZ,KAAA,GAAA,MAAA,KAAA,GAAAY,EAAAb,KAAA,GAAAa,EAAAP,GAAAO,EAAA,MAAA,GAmBxBlB,EAAIY,OAAO,KAAKC,KAAK,4BAAAK,EAAAP,IAnBG,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAjB,QAAA0B,cAAA,SAAAxB,EAAAC,GAAA,IAAAgB,EAAAQ,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,EAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAU,EAAAjB,EAAAoB,OAAAC,GAAAI,EAKHzB,EAAA+B,KAArB9B,EALwBwB,EAKxBxB,OAAIY,EALoBY,EAKpBZ,OAAYC,EALQW,EAKRX,WALQgB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAK,MAAAZ,OAAA0B,SAAAL,GAAAP,QAAA,KAAA,EAAA,GAAAQ,EAAAY,EAAAnB,KAAA,CAAAmB,EAAAvB,KAAA,EAAA,MAAA,OAAAuB,EAAAP,OAAA,SAAAtB,EAAAY,OAAA,KAAAC,KAAA,qBAAA,KAAA,EAAA,OAS5Be,EAAA,CA0BMH,OAAAA,EACAC,OAAAA,EA1BN7B,WAAAA,EAA+BkC,UAAA,IAAAC,MAAAf,EAAAgB,QAAAC,KAAAN,GAVHC,EAAAvB,KAAA,GAAAJ,mBAAAK,MAUGU,EAAAkB,QAVH,KAAA,GAUGnC,EAAAoC,SAAA,YAAAC,OAAArB,IAVHa,EAAAvB,KAAA,GAAA,MAAA,KAAA,GAAAuB,EAAAxB,KAAA,GAAAwB,EAAAlB,GAAAkB,EAAA,MAAA,GAUG7B,EAAAY,OAAA,KAAAC,KAAA,wBAAAgB,EAAAlB,IAVH,KAAA,GAAA,IAAA,MAAA,OAAAkB,EAAAf,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"courseController.min.js","sourcesContent":["// /server/controllers/courseController.js\r\nconst Course = require(\"../../api/models/course\"); // Adjust the path as necessary\r\n\r\n// Controller to render the course list view\r\nexports.getCourseListView = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find().exec(); // Fetch all courses\r\n    res.render(\"courseList\", { courses }); // Render the course list view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving courses: \" + error);\r\n  }\r\n};\r\n\r\n// Controller to render the course details view\r\nexports.getCourseDetailsView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  try {\r\n    const course = await Course.findById(courseId).exec(); // Fetch course by ID\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n    res.render(\"courseDetails\", { course }); // Render the course details view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving course: \" + error);\r\n  }\r\n};\r\n\r\n// Controller to handle adding a review to a course (view-side)\r\nexports.addReviewView = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    course.reviews.push(newReview); // Add the new review to the course's reviews array\r\n    await course.save(); // Save the updated course\r\n\r\n    res.redirect(`/courses/${courseId}`); // Redirect to the course details page\r\n  } catch (error) {\r\n    res.status(500).send(\"Error adding review: \" + error);\r\n  }\r\n};\r\n"]}
=======
{"version":3,"sources":["courseController.js"],"names":["Course","require","exports","getCourseList","req","res","courses","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","t0","status","json","message","error","stop","getCourseListView","_context2","render","send","getCourseDetails","course","_context3","findById","params","id","abrupt","getCourseDetailsView","_context4"],"mappings":"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","file":"courseController.min.js","sourcesContent":["const Course = require(\"../../api/models/course\"); // Adjust the path as necessary\r\n\r\n// Function to get a list of courses (API)\r\nexports.getCourseList = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find(); // Fetch all courses\r\n    res.json(courses); // Return JSON response\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error fetching courses\", error });\r\n  }\r\n};\r\n\r\n// Function to render course list view\r\nexports.getCourseListView = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find(); // Fetch all courses\r\n    res.render(\"courseList\", { courses }); // Render course list view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving courses: \" + error);\r\n  }\r\n};\r\n\r\n// Function to get a specific course (API)\r\nexports.getCourseDetails = async (req, res) => {\r\n  try {\r\n    const course = await Course.findById(req.params.id);\r\n    if (!course) return res.status(404).json({ message: \"Course not found\" });\r\n    res.json(course); // Return JSON response\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error fetching course\", error });\r\n  }\r\n};\r\n\r\n// Function to render specific course details view\r\nexports.getCourseDetailsView = async (req, res) => {\r\n  try {\r\n    const course = await Course.findById(req.params.id);\r\n    if (!course) return res.status(404).send(\"Course not found\");\r\n    res.render(\"courseDetails\", { course }); // Render course details view\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving course: \" + error);\r\n  }\r\n};\r\n"]}
>>>>>>> baea0f805be43cb9f0d18de0157714dbb01214b3
