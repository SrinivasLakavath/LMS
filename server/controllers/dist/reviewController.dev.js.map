<<<<<<< HEAD
{"version":3,"sources":["reviewController.js"],"names":["Course","require","exports","addReview","req","res","courseId","params","id","body","author","rating","reviewText","findById","exec","course","status","send","newReview","timestamp","Date","reviews","push","save","redirect","message"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAtB,C,CAAmD;AAEnD;;;AACAC,OAAO,CAACC,SAAR,GAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,QADY,GACDF,GAAG,CAACG,MAAJ,CAAWC,EADV,EACc;;AADd,sBAEqBJ,GAAG,CAACK,IAFzB,EAEVC,MAFU,aAEVA,MAFU,EAEFC,MAFE,aAEFA,MAFE,EAEMC,UAFN,aAEMA,UAFN,EAE+B;;AAF/B;AAAA;AAAA,0CAMKZ,MAAM,CAACa,QAAP,CAAgBP,QAAhB,EAA0BQ,IAA1B,EANL;;AAAA;AAMVC,UAAAA,MANU;;AAAA,cASXA,MATW;AAAA;AAAA;AAAA;;AAAA,2CAUPV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAVO;;AAAA;AAahB;AACMC,UAAAA,SAdU,GAcE;AAChBR,YAAAA,MAAM,EAANA,MADgB;AAEhBC,YAAAA,MAAM,EAANA,MAFgB;AAGhBC,YAAAA,UAAU,EAAVA,UAHgB;AAIhBO,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJK,WAdF,EAqBhB;;AACAL,UAAAA,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoBJ,SAApB,EAtBgB,CAwBhB;;AAxBgB;AAAA,0CAyBVH,MAAM,CAACQ,IAAP,EAzBU;;AAAA;AA2BhB;AACAlB,UAAAA,GAAG,CAACmB,QAAJ,oBAAyBlB,QAAzB;AA5BgB;AAAA;;AAAA;AAAA;AAAA;AA+BhB;AACAD,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAA0B,YAAMQ,OAArD;;AAhCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["const Course = require(\"../../api/models/course\"); // Adjust the path if necessary\r\n\r\n// Function to add a review to a specific course\r\nexports.addReview = async (req, res) => {\r\n  const courseId = req.params.id; // Getting the course ID from route parameters\r\n  const { author, rating, reviewText } = req.body; // Destructuring form data from request body\r\n\r\n  try {\r\n    // Find the course by its ID\r\n    const course = await Course.findById(courseId).exec();\r\n    \r\n    // If course not found, return a 404 status\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    // Create a new review object\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    // Push the new review into the course's reviews array\r\n    course.reviews.push(newReview);\r\n\r\n    // Save the updated course document\r\n    await course.save();\r\n\r\n    // Redirect back to the course details page (or handle success response)\r\n    res.redirect(`/courses/${courseId}`);\r\n    \r\n  } catch (error) {\r\n    // Handle any errors\r\n    res.status(500).send(\"Error adding review: \" + error.message);\r\n  }\r\n};"],"file":"reviewController.dev.js"}
=======
{"version":3,"sources":["reviewController.js"],"names":["Course","require","addReview","req","res","courseId","params","id","body","author","rating","reviewText","findById","exec","course","status","send","newReview","timestamp","Date","reviews","push","save","redirect","reviewList","render","module","exports"],"mappings":";;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAtB,C,CAEA;;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACVC,UAAAA,QADU,GACCF,GAAG,CAACG,MAAJ,CAAWC,EADZ;AAAA,sBAEuBJ,GAAG,CAACK,IAF3B,EAERC,MAFQ,aAERA,MAFQ,EAEAC,MAFA,aAEAA,MAFA,EAEQC,UAFR,aAEQA,UAFR;AAAA;AAAA;AAAA,0CAMOX,MAAM,CAACY,QAAP,CAAgBP,QAAhB,EAA0BQ,IAA1B,EANP;;AAAA;AAMRC,UAAAA,MANQ;;AAAA,cAOTA,MAPS;AAAA;AAAA;AAAA;;AAAA,2CAQLV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CARK;;AAAA;AAWd;AACMC,UAAAA,SAZQ,GAYI;AAChBR,YAAAA,MAAM,EAANA,MADgB;AAEhBC,YAAAA,MAAM,EAANA,MAFgB;AAGhBC,YAAAA,UAAU,EAAVA,UAHgB;AAIhBO,YAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJK,CAIO;;AAJP,WAZJ,EAmBd;;AACAL,UAAAA,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoBJ,SAApB;AApBc;AAAA,0CAqBRH,MAAM,CAACQ,IAAP,EArBQ;;AAAA;AAuBd;AACAlB,UAAAA,GAAG,CAACmB,QAAJ,oBAAyBlB,QAAzB;AAxBc;AAAA;;AAAA;AAAA;AAAA;AA0BdD,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,qCAArB;;AA1Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB,C,CA8BA;;;AACA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,QADW,GACAF,GAAG,CAACG,MAAJ,CAAWC,EADX,EACe;;AADf;AAAA;AAAA,0CAKMP,MAAM,CAACY,QAAP,CAAgBP,QAAhB,EAA0BQ,IAA1B,EALN;;AAAA;AAKTC,UAAAA,MALS;;AAAA,cAMVA,MANU;AAAA;AAAA;AAAA;;AAAA,4CAONV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAPM;;AAAA;AAUf;AACAZ,UAAAA,GAAG,CAACqB,MAAJ,CAAW,eAAX,EAA4B;AAC1BX,YAAAA,MAAM,EAAEA,MADkB,CACV;;AADU,WAA5B;AAXe;AAAA;;AAAA;AAAA;AAAA;AAefV,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,2CAArB;;AAfe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAmBAU,MAAM,CAACC,OAAP,GAAiB;AACfzB,EAAAA,SAAS,EAATA,SADe;AAEfsB,EAAAA,UAAU,EAAVA;AAFe,CAAjB","sourcesContent":["// const Course = require(\"../../api/models/course\");\r\n\r\n// // Function to add a review to a specific course\r\n// const addReview = async (req, res) => {\r\n//   const courseId = req.params.id;\r\n//   const { author, rating, reviewText } = req.body;\r\n\r\n//   try {\r\n//     // Find the course by ID\r\n//     const course = await Course.findById(courseId).exec();\r\n//     if (!course) {\r\n//       return res.status(404).send(\"Course not found\");\r\n//     }\r\n\r\n//     // Create a new review object\r\n//     const newReview = {\r\n//       author,\r\n//       rating,\r\n//       reviewText,\r\n//       timestamp: new Date().toLocaleString(),\r\n//     };\r\n\r\n//     // Push the new review to the course's reviews array\r\n//     course.reviews.push(newReview);\r\n//     await course.save();\r\n\r\n//     // Redirect to the course detail page after adding the review\r\n//     res.redirect(`/courses/${courseId}`);\r\n//   } catch (error) {\r\n//     res.status(500).send(\"Error adding review: \" + error);\r\n//   }\r\n// };\r\n// // Function to list all reviews from all courses\r\n// const reviewList = async (req, res) => {\r\n//   try {\r\n//     // Fetch all courses and extract reviews\r\n//     const courses = await Course.find().exec();\r\n//     const allReviews = courses.map(course => course.reviews).flat();\r\n\r\n//     // Render the review list page with extracted reviews\r\n//     res.render(\"reviewList\", { reviews: allReviews });\r\n//   } catch (error) {\r\n//     res.status(500).send(\"Error retrieving reviews: \" + error.message);\r\n//   }\r\n// };\r\n\r\n// module.exports = {\r\n//   addReview,\r\n//   reviewList,\r\n// };\r\nconst Course = require(\"../../api/models/course\");\r\n\r\n// Function to add a review to a specific course\r\nconst addReview = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    // Find the course by ID\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    // Create a new review object\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(), // Include time for better detail\r\n    };\r\n\r\n    // Push the new review to the course's reviews array\r\n    course.reviews.push(newReview);\r\n    await course.save();\r\n\r\n    // Redirect to the course detail page after adding the review\r\n    res.redirect(`/courses/${courseId}`);\r\n  } catch (error) {\r\n    res.status(500).send(\"Error adding review: \" + error);\r\n  }\r\n};\r\n\r\n// Function to list all reviews for a specific course\r\nconst reviewList = async (req, res) => {\r\n  const courseId = req.params.id; // Get course ID from the request parameters\r\n\r\n  try {\r\n    // Find the course by ID and populate the reviews\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    // Render the course details page with reviews\r\n    res.render(\"courseDetails\", {\r\n      course: course, // Pass the course object to the view\r\n    });\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving reviews: \" + error);\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  addReview,\r\n  reviewList,\r\n};\r\n"],"file":"reviewController.dev.js"}
>>>>>>> baea0f805be43cb9f0d18de0157714dbb01214b3
