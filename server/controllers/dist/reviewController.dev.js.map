{"version":3,"sources":["reviewController.js"],"names":["Course","require","exports","addReview","req","res","courseId","params","id","body","author","rating","reviewText","findById","exec","course","status","send","newReview","timestamp","Date","reviews","push","save","redirect","message"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAtB,C,CAAmD;AAEnD;;;AACAC,OAAO,CAACC,SAAR,GAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,QADY,GACDF,GAAG,CAACG,MAAJ,CAAWC,EADV,EACc;;AADd,sBAEqBJ,GAAG,CAACK,IAFzB,EAEVC,MAFU,aAEVA,MAFU,EAEFC,MAFE,aAEFA,MAFE,EAEMC,UAFN,aAEMA,UAFN,EAE+B;;AAF/B;AAAA;AAAA,0CAMKZ,MAAM,CAACa,QAAP,CAAgBP,QAAhB,EAA0BQ,IAA1B,EANL;;AAAA;AAMVC,UAAAA,MANU;;AAAA,cASXA,MATW;AAAA;AAAA;AAAA;;AAAA,2CAUPV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,kBAArB,CAVO;;AAAA;AAahB;AACMC,UAAAA,SAdU,GAcE;AAChBR,YAAAA,MAAM,EAANA,MADgB;AAEhBC,YAAAA,MAAM,EAANA,MAFgB;AAGhBC,YAAAA,UAAU,EAAVA,UAHgB;AAIhBO,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AAJK,WAdF,EAqBhB;;AACAL,UAAAA,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoBJ,SAApB,EAtBgB,CAwBhB;;AAxBgB;AAAA,0CAyBVH,MAAM,CAACQ,IAAP,EAzBU;;AAAA;AA2BhB;AACAlB,UAAAA,GAAG,CAACmB,QAAJ,oBAAyBlB,QAAzB;AA5BgB;AAAA;;AAAA;AAAA;AAAA;AA+BhB;AACAD,UAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0BAA0B,YAAMQ,OAArD;;AAhCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["const Course = require(\"../../api/models/course\"); // Adjust the path if necessary\r\n\r\n// Function to add a review to a specific course\r\nexports.addReview = async (req, res) => {\r\n  const courseId = req.params.id; // Getting the course ID from route parameters\r\n  const { author, rating, reviewText } = req.body; // Destructuring form data from request body\r\n\r\n  try {\r\n    // Find the course by its ID\r\n    const course = await Course.findById(courseId).exec();\r\n    \r\n    // If course not found, return a 404 status\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    // Create a new review object\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    // Push the new review into the course's reviews array\r\n    course.reviews.push(newReview);\r\n\r\n    // Save the updated course document\r\n    await course.save();\r\n\r\n    // Redirect back to the course details page (or handle success response)\r\n    res.redirect(`/courses/${courseId}`);\r\n    \r\n  } catch (error) {\r\n    // Handle any errors\r\n    res.status(500).send(\"Error adding review: \" + error.message);\r\n  }\r\n};"],"file":"reviewController.dev.js"}