<<<<<<< HEAD
{"version":3,"sources":["apiCoursesController.js"],"names":["Course","require","getCourses","req","res","courses","regeneratorRuntime","async","_context","prev","next","awrap","exec","sent","send","t0","status","stop","getCourseById","courseId","course","_context2","params","id","findById","abrupt","addReview","_req$body","author","rating","reviewText","newReview","_context3","body","reviews","push","save","module","exports"],"mappings":"aACA,IAAMA,OAASC,QAAQ,oBAGjBC,WAAa,SAAOC,EAAKC,GAAZ,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAbT,OAAAA,OAAaU,QAAA,KAAA,EAAbV,EAAaM,EAAAK,KAAAT,EAAAU,KAAAT,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAAAJ,EAAAY,OAAA,KAAAF,KAAA,6BAAAN,EAAAO,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAP,EAAAS,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAAC,cAAA,SAAAf,EAAAC,GAAA,IAAAe,EAAAC,EAAA,OAAAd,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,OAWXS,EAAWhB,EAAImB,OAAOC,GAXXF,EAAAZ,KAAA,EAAAY,EAAAX,KAAA,EAAAJ,mBAAAK,MAGNN,OAAUmB,SAAAL,GAAAP,QAHJ,KAAA,EAAA,GAGfR,EAHeiB,EAAAR,KAAA,CAAAQ,EAAAX,KAAA,EAAA,MAAA,OAAAW,EAAAI,OAAA,SAAArB,EAAAY,OAAA,KAAAF,KAAA,qBAAA,KAAA,EAkBfV,EAAIU,KAAKM,GAlBMC,EAAAX,KAAA,GAAA,MAAA,KAAA,GAAAW,EAAAZ,KAAA,GAAAY,EAAAN,GAAAM,EAAA,MAAA,GAAAjB,EAAAY,OAAA,KAAAF,KAAA,4BAAAO,EAAAN,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAAS,UAAA,SAAAvB,EAAAC,GAAA,IAAAe,EAAAQ,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,EAAA,OAAAzB,mBAAAC,MAAA,SAAAyB,GAAA,OAAA,OAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,KAAA,EAAA,OAAAS,EAAAhB,EAAAmB,OAAAC,GAAAI,EAAAxB,EAAA8B,KAAAL,EAAAD,EAAAC,OAAAC,EAAAF,EAAAE,OAAAC,EAAAH,EAAAG,WAAAE,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAAAJ,mBAAAK,MASnBX,OAAAwB,SAAAL,GAAAP,QATmB,KAAA,EAAA,GASnBQ,EATmBY,EAAAnB,KAAA,CAAAmB,EAAAtB,KAAA,EAAA,MAAA,OAAAsB,EAAAP,OAAA,SAgCNrB,EAAIY,OAAO,KAAKF,KAAK,qBAhCf,KAAA,EAAA,OAUGiB,EAAA,CAAAH,OAAAA,EAAAC,OAAAA,EAAAC,WAAAA,EACdX,UAAAA,IAAWhB,MAgCfiB,EAAOc,QAAQC,KAAKJ,GA3CLC,EAAAtB,KAAA,GAAAJ,mBAAAK,MAUGS,EAAAgB,QAVH,KAAA,GAUGhC,EAAAY,OAKbI,KALaN,KAAA,6BAVHkB,EAAAtB,KAAA,GAAA,MAAA,KAAA,GAAAsB,EAAAvB,KAAA,GAAAuB,EAAAjB,GAAAiB,EAAA,MAAA,GAUG5B,EAAAY,OAAA,KAAAF,KAAA,wBAAAkB,EAAAjB,IAVH,KAAA,GAAA,IAAA,MAAA,OAAAiB,EAAAf,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAUGoB,OAAAC,QAAA,CAQlBlC,WAAAA,WAsCFc,cAAAA,cA9CoBQ,UAAAA","file":"apiCoursesController.min.js","sourcesContent":["// /api/controllers/apiCoursesController.js\r\nconst Course = require(\"../models/course\");\r\n\r\n// Function to get all courses\r\nconst getCourses = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find().exec();\r\n    res.send(courses); // Using .send() as per your preference\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving courses: \" + error);\r\n  }\r\n};\r\n\r\n// Function to get a course by its ID\r\nconst getCourseById = async (req, res) => {\r\n  const courseId = req.params.id;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n    res.send(course); // Using .send() as per your preference\r\n  } catch (error) {\r\n    res.status(500).send(\"Error retrieving course: \" + error);\r\n  }\r\n};\r\n\r\n// Function to add a review to a specific course\r\nconst addReview = async (req, res) => {\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).send(\"Course not found\");\r\n    }\r\n\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    // Add the new review to the course's reviews array\r\n    course.reviews.push(newReview);\r\n    await course.save(); // Save the updated course\r\n\r\n    // Respond with success\r\n    res.status(201).send(\"Review added successfully\");\r\n  } catch (error) {\r\n    res.status(500).send(\"Error adding review: \" + error);\r\n  }\r\n};\r\n\r\n// Export the functions\r\nmodule.exports = {\r\n  getCourses,\r\n  getCourseById,\r\n  addReview, // New function added here\r\n};\r\n"]}
=======
{"version":3,"sources":["apiCoursesController.js"],"names":["Course","require","req","res","getCourses","exec","json","courses","status","message","_context","t0","getCourseById","courseId","course","regeneratorRuntime","async","_context2","prev","next","params","id","awrap","findById","sent","abrupt","stop","module","exports"],"mappings":"aACA,IAAMA,OAASC,QAAQ,oBAAjBD,WAASC,SAAQC,EAAAC,GAARF,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAETG,OAAAA,OAAaC,QAFJJ,KAAAA,EAETG,EAFSH,EAAAA,KAEIE,EAAAG,KAAAC,GAFJN,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAEIE,EAAAK,OAAA,KAAAF,KAAA,CAAAG,QAAA,6BAAAC,EAAAC,KAFJV,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,MAEIW,cAAA,SAAAV,EAAAC,GAAA,IAAAU,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAN,EAAAX,EAAAkB,OAAAC,GAAAJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAO,MAAAtB,OAAAuB,SAAAV,GAAAR,QAAA,KAAA,EAAA,GAETE,EAFSU,EAAAO,KAAA,CAAAP,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAQ,OAAA,SAAAtB,EAAAK,OAAA,KAAAF,KAAA,CAAAG,QAAA,sBAAA,KAAA,EAiBfN,EAAIG,KAAKQ,GAjBMG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAN,GAAAM,EAAA,MAAA,GAAAd,EAAAK,OAAA,KAAAF,KAAA,CAAAG,QAAA,4BAAAQ,EAAAN,KAAA,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAS,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAKMC,OAAAC,QAArB,CAmBFxB,WAAAA,WAxBiBQ,cAAAA","file":"apiCoursesController.min.js","sourcesContent":["// /api/controllers/apiCoursesController.js\r\nconst Course = require(\"../models/course\");\r\n\r\nconst getCourses = async (req, res) => {\r\n  try {\r\n    const courses = await Course.find().exec();\r\n    res.json(courses);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error retrieving courses: \" + error });\r\n  }\r\n};\r\n\r\nconst getCourseById = async (req, res) => {\r\n  const courseId = req.params.id;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).json({ message: \"Course not found\" });\r\n    }\r\n    res.json(course);\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error retrieving course: \" + error });\r\n  }\r\n};\r\n\r\nmodule.exports = {\r\n  getCourses,\r\n  getCourseById,\r\n};\r\n"]}
>>>>>>> baea0f805be43cb9f0d18de0157714dbb01214b3
