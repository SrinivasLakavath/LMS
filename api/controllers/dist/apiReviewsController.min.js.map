{"version":3,"sources":["apiReviewsController.js"],"names":["Course","require","addReview","req","res","courseId","_req$body","author","rating","reviewText","course","newReview","regeneratorRuntime","async","_context","prev","next","console","log","params","body","awrap","findById","exec","sent","abrupt","status","json","message","timestamp","Date","push","save","review","t0","error","stop"],"mappings":"aACA,IAAMA,OAASC,QAAQ,oBAGjBC,UAAY,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAChBC,QAAQC,IAAI,cAAef,EAAIgB,QAD3BjB,EAAYC,EAAAgB,OAAZjB,GAAYI,EAAAH,EAAAiB,KAAAb,EAAAD,EAAAC,OAAAC,EAAAF,EAAAE,OAAAC,EAAAH,EAAAG,WAAAK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAS,MAAArB,OAAAsB,SAAAjB,GAAAkB,QAAA,KAAA,EAAA,GAAAb,EAAAI,EAAAU,KAAA,CAAAV,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAW,OAAA,SAAArB,EAAAsB,OAAA,KAAAC,KAAA,CAAAC,QAAA,sBAAA,KAAA,EAAA,OAEVvB,EAAWF,CAFDI,OAAAA,EAAAC,OAAAA,EAAAC,WAAAA,EAAAoB,UAAA,IAAAC,MAMRpB,EAAAA,QANQqB,KAAApB,GAAAG,EAAAE,KAAA,GAAAJ,mBAAAS,MAmBRX,EAAOsB,QAnBC,KAAA,GAAA5B,EAAAsB,OAAA,KAAAC,KAAA,CAAAC,QAAA,4BAAAK,OAAAtB,IAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,MAAA,GAAAV,EAAAsB,OAAA,KAAAC,KAAA,CAAAC,QAAA,sBAAAO,MAAArB,EAAAoB,KAAA,KAAA,GAAA,IAAA,MAAA,OAAApB,EAAAsB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAQkBR,OAAAA,QAAAA,CAAF1B,UAAAA","file":"apiReviewsController.min.js","sourcesContent":["// api/controllers/apiReviewsController.js\r\nconst Course = require(\"../models/course\");\r\n\r\n// Function to add a review (API)\r\nconst addReview = async (req, res) => {\r\n  console.log(\"req.params:\", req.params); // Check this log\r\n  const courseId = req.params.id;\r\n  const { author, rating, reviewText } = req.body;\r\n\r\n  try {\r\n    const course = await Course.findById(courseId).exec();\r\n    if (!course) {\r\n      return res.status(404).json({ message: \"Course not found\" });\r\n    }\r\n\r\n    const newReview = {\r\n      author,\r\n      rating,\r\n      reviewText,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    course.reviews.push(newReview);\r\n    await course.save();\r\n\r\n    res.status(201).json({ message: \"Review added successfully\", review: newReview });\r\n  } catch (error) {\r\n    res.status(500).json({ message: \"Error adding review\", error });\r\n  }\r\n};\r\nmodule.exports = {\r\n  addReview,\r\n};\r\n"]}